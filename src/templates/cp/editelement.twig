{% set canEditBlocks = currentUser.can('manageThemesBlocks') %}
{% set canEditDisplays = currentUser.can('manageThemesDisplays') %}
{% set hasTopMargin = hasTopMargin ?? false %}
{% set showBlocks = showBlocks ?? true %}

{% if canEditDisplays or canEditBlocks %}
    {% do craft.app.view.registerAssetBundle('Ryssbowh\\CraftThemes\\assets\\ElementsAssets') %}
    <div id="theme-details"{{ hasTopMargin ? 'class="top-margin"' }}>
        {% for theme in craft.themes.registry.nonPartials %}
            <div class="field">
                <div class="heading">
                    <label>{{ theme.name }}</label>
                </div>
                <div class="input ltr flex">
                    {% if canEditDisplays %}
                        <div class="btngroup">
                            <button type="button" class="btn menubtn" aria-haspopup="listbox" aria-expanded="false">
                                <span>{{ 'Edit displays' }}</span>
                            </button>
                            <div class="menu">
                                <ul class="padded" role="listbox" aria-hidden="true">
                                    {% set layout = element.getLayout(theme) %}
                                    {% if layout %}
                                        {% for viewMode in layout.viewModes %}
                                            <li>
                                                <a href="{{ element.getLayout(theme).getEditDisplaysUrl(viewMode) }}" role="option" tabindex="-1">{{ viewMode.name }}</a>
                                            </li>
                                        {% endfor %}
                                    {% endif %}
                                </ul>
                            </div>
                        </div>
                    {% endif %}
                    {% if canEditBlocks and showBlocks %}
                        <a class="btn" href="{{ element.getLayout(theme).getEditBlocksUrl() }}">
                            <span>{{ 'Edit Blocks'|t('themes') }}</span>
                        </a>
                    {% endif %}
                </div>
        {% endfor %}
    </div>
{% endif %}