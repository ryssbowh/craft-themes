{% import "_includes/forms" as forms %}
{% extends "_layouts/cp" %}
{% set title = title %}
{% set selectedSubnavItem = 'themes-rules' %}
{% set fullPageForm = true %}
{% set mainFormAttributes = {
    action: url('themes/save-rules')
} %}

{% block content %}
    {% namespace namespace %}
        <h2 class="first">{{ 'Themes rules'|t('themes') }}</h2>
        <p>{{ 'Rules will be handled from top to bottom, the first match will define the theme and the other rules will not be looked at.'|t('themes') }}</p>

        {% set name = 'rules' %}
        {% set id = 'theme-rules' %}
        {% set initJs = false %}
        {% set rows = settings.rules %}
        {% include "_includes/forms/editableTable" %}

        <h2>{{ 'Default theme'|t('themes') }}</h2>
        {{ forms.selectField({
            name: 'default',
            options: {'': 'No theme'|t('themes')}|merge(themes),
            value: settings.default,
            instructions: 'Default theme when no rules match'|t('themes')
        }) }}

        <h2>{{ 'Console requests'|t('themes') }}</h2>
        {{ forms.lightswitchField({
            name: 'setConsole',
            on: settings.setConsole,
            containerAttributes: {
                class: ['console-lightswitch']
            },
            label: 'Set the console requests theme, this is needed if console requests render templates (when sending emails for example)'|t('themes')
        }) }}

        {{ forms.selectField({
            name: 'console',
            label: 'Console requests theme'|t('themes'),
            options: themes,
            value: settings.console,
            fieldClass: ['console-themes']
        }) }}
    {% endnamespace %}

    {% js on ready %}
        new Craft.Themes.RulesTable('settings-{{ id }}', 'settings[rules]', {{ cols|json_encode|raw }}, {});
    {% endjs %}
{% endblock %}

