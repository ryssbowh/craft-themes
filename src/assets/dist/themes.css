.themes{display:grid;grid-template-columns:1fr;column-gap:15px;row-gap:15px}.themes .theme{border:1px solid #cdd8e4;border-radius:5px}.themes .theme .preview{padding-bottom:60%;position:relative;border-bottom:1px solid #cdd8e4}.themes .theme .no-preview img{top:10px;height:calc(100% - 50px)}.themes .theme .no-preview .no-preview-p{position:absolute;left:50%;transform:translateX(-50%);bottom:20px;width:100%;text-align:center}.themes .theme img{position:absolute;left:0;top:0;object-fit:contain;width:100%;height:100%}.themes .theme .infos{padding:10px;flex-direction:column;display:flex}.themes .theme .name{display:flex;justify-content:space-between}.themes .theme .extends{min-height:20px}.themes .theme .menubtn{background:0 0;padding:0!important;height:auto}.themes .theme .menubtn.active{background-color:unset}.themes .theme .menubtn:after{content:unset}.themes .theme .menubtn:before{margin-right:0!important}.themes .theme .extends,.themes .theme .partial{font-size:12px}@media only screen and (min-width:568px){.themes{grid-template-columns:1fr 1fr}}@media only screen and (min-width:768px){.themes{grid-template-columns:1fr 1fr 1fr}}@media only screen and (min-width:1000px){.themes{grid-template-columns:1fr 1fr 1fr 1fr}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
