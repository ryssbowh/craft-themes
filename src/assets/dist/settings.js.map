{"version":3,"sources":["settings.js"],"names":["enabled","change","_this","disableRow","btn","next","show","$","ajax","method","url","attr","dataType","X-CSRF-Token","Craft","csrfTokenValue","res","displayNotice","message","headers","cp","displayError","responseJSON","error","always","hide","done","Themes","SettingsTable","EditableTable","extend","init","id","baseName","columns","settings","this","onAddRow","tr","prototype","call","checkAllRows","addClass","find","hasClass","e","repair"],"mappings":"aAiCQA,SAAAA,OAAQC,GACJC,EAAAA,KAAMC,YAAN,GACHC,EAFDC,OAAAC,OAGHC,EAAAC,KAAA,CAhCLC,OAAA,OAwCQC,IAAKN,EAAIO,KAAK,QALtBC,SAAgBR,OACRO,QAAK,CACTE,eAAAC,MAAAC,kBAEIN,KAAQ,SAAAO,GACLF,MAAMH,GAAJM,cAFFD,EAAAE,WAGHN,KAAQ,SAAAI,GACRG,MAASC,GAAAC,aAAAL,EAAAM,aAAAC,SACLC,OAAA,WADKpB,EAAAC,OAAAoB,OAGVC,EAAKf,KAAA,YAAS,KAjDD,MAAhBG,MAAMa,SACNb,MAAMa,OAAS,IAClBb,MAAAa,OAAAC,cAAAd,MAAAe,cAAAC,OAAA,CACDC,KAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAGQ,IAAIjC,EAAQkC,KACZD,EAASE,SAAW,SAAUC,GAHtCpC,EAAa0B,SAAbU,IAEYpC,MAAK2B,cAATU,UAAAR,KAAAS,KAAAJ,KAAAJ,EAAAC,EAAAC,EAAAC,GAKAC,KAAKK,gBAFJA,aAFD,WAQA,IAAIvC,EAAQkC,KALZtB,EAAMe,KAAAA,KAAAA,OAAcU,KAAAA,MAAeC,WAC9BC,EAAAA,SAALlC,EAAA6B,UAUJjC,WAAY,SAAUmC,EAAItC,GALfA,EACGqC,EAAAA,YAAU,YAb4BC,EAAAI,SAAA,aAoB/CL,SAAM,SAAAC,GACD,IAACI,EAASJ,EAAAK,KAAZ,2BACHP,KAAAjC,WAAAmC,EAAAtC,EAAA4C,SAAA,OAtB+C,IAAA1C,EAAAkC,KAyBpDC,EAAUpC,OAAA,WACFD,EAAUsC,WAAQA,EAAAtC,EAAA4C,SAAA,YAuBzBrC,EAAA,WACGH,EAAAA,WAAWqB,MAAX,SAAAoB,GACIlC,EAAAA,iBAbRmC,OAAAvC,EAAA6B","file":"settings.js","sourcesContent":["if (Craft.Themes == null) {\n    Craft.Themes = {};\n}\n/** global: Craft */\nCraft.Themes.SettingsTable = Craft.EditableTable.extend({\n    init: function(id, baseName, columns, settings) {\n        let _this = this;\n        settings.onAddRow = function (tr) {\n            _this.onAddRow(tr);\n        }\n        Craft.EditableTable.prototype.init.call(this, id, baseName, columns, settings);\n        this.checkAllRows();\n    },\n\n    checkAllRows: function() {\n        let _this = this;\n        $.each(this.$tbody.find('tr'), function() {\n            _this.onAddRow($(this));\n        });\n    },\n\n    disableRow: function (tr, enabled) {\n        if (enabled) {\n            tr.removeClass('disabled')\n        } else {\n            tr.addClass('disabled');\n        }\n    },\n\n    onAddRow: function (tr) {\n        let enabled = tr.find('td.enabled .lightswitch');\n        this.disableRow(tr, enabled.hasClass('on'));\n        let _this = this;\n        enabled.change(function () {\n            _this.disableRow(tr, enabled.hasClass('on'));\n        });\n    }\n});\n\nfunction repair(btn) {\n    btn.attr('disabled', true);\n    btn.next().show();\n    $.ajax({\n        method: 'post',\n        url: btn.attr('href'), \n        dataType: 'json',\n        headers: {\n            'X-CSRF-Token': Craft.csrfTokenValue\n        }\n    }).done((res) => {\n        Craft.cp.displayNotice(res.message);\n    }).fail((res) => {\n        Craft.cp.displayError(res.responseJSON.error);\n    }).always(() => {\n        btn.next().hide();\n        btn.attr('disabled', false);\n    })\n}\n\n$(function() { \n    $('.repair').click(function (e) {\n        e.preventDefault();\n        repair($(this));\n    });\n});"]}